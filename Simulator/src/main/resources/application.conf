

my-dispatcher {  # thread-pool or fork-join
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor" # or use "fork-join-executor"
  # Configuration for the thread pool
  thread-pool-executor {
    # minimum number of threads to cap factor-based core number to
    core-pool-size-min = 10
    # No of core threads ... ceil(available processors * factor)
    core-pool-size-factor = 4.0
    # maximum number of threads to cap factor-based number to
    core-pool-size-max = 1000
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 1000
}

akka.actor.deployment {
  /UavActor{
    dispatcher = my-dispatcher
    router = round-robin-pool
    nr-of-instances = 2 #100
  }
}

akka.actor.deployment { # not_in_use
  /Produzer{
    router = smallest-mailbox-pool # or round-robin-pool
    nr-of-instances = 1
  }
}


kafka {
  host = "155.69.147.231"
  #host = ${?KAFKA_HOST
  port = "9092"
  #port = ${?KAFKA_PORT}
  topic = "mavz"
  #topic = ${?KAFKA_TOPIC}
}

uav {
  waitBegin = 1000
  waitContinue = 200
}

#round-robin-pool
#smallest-mailbox-pool
